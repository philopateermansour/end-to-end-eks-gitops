apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-backend-service
  labels:
    release: prometheus-stack 
    app.kubernetes.io/component: backend
    app.kubernetes.io/instance: {{ .Release.Name }}

spec:
  ports:
  - port: {{ .Values.backend.service.port }}
    targetPort: {{ .Values.backend.service.port }}
    name: http
  selector:
    app.kubernetes.io/component: backend
    app.kubernetes.io/instance: {{ .Release.Name }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-backend
  labels:
    app.kubernetes.io/component: backend
spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/component: backend
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: backend
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
      - name: backend
        image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
        ports:
        - containerPort: {{ .Values.backend.service.port }}
        env:
          - name: PORT
            value: {{ .Values.backend.service.port | quote }}
          - name: DB_NAME
            value: {{ .Values.mysql.auth.database | quote }}
          - name: DB_USER
            value: {{ .Values.mysql.auth.username | quote }}
          - name: DB_HOST
            value: "{{ .Release.Name }}-mysql-service" 
          - name: REDIS_HOST
            value: "{{ .Release.Name }}-redis-service"
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-guestbook-secrets
                key: MYSQL_USER_PASSWORD
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-guestbook-secrets
                key: REDIS_PASSWORD